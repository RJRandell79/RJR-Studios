@mixin fa-icon() {
  display: inline-block;
  font: normal normal normal #{$fa-font-size-base}/#{$fa-line-height-base}
    FontAwesome; // shortening font declaration
  font-size: inherit; // can't have font-size inherit on line above, so need to override
  text-rendering: auto; // optimizelegibility throws things off #1094
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin fa-icon-rotate($degrees, $rotation) {
  -ms-filter: 'progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation})';
  -webkit-transform: rotate($degrees);
  -ms-transform: rotate($degrees);
  transform: rotate($degrees);
}

@mixin fa-icon-flip($horiz, $vert, $rotation) {
  -ms-filter: 'progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation}, mirror=1)';
  -webkit-transform: scale($horiz, $vert);
  -ms-transform: scale($horiz, $vert);
  transform: scale($horiz, $vert);
}

// Only display content to screen readers. A la Bootstrap 4.
// See: http://a11yproject.com/posts/how-to-hide-content/

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate

@mixin sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    clip: auto;
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}
@mixin background-clip($box) {
  -webkit-background-clip: $box;
  background-clip: $box;
}
@mixin box-shadow($left, $top, $blur, $color) {
  -webkit-box-shadow: $left $top $blur $color;
  -moz-box-shadow: $left $top $blur $color;
  box-shadow: $left $top $blur $color;
}
@mixin transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
@mixin transform($args) {
  -webkit-transform: $args;
  -moz-transform: $args;
  -o-transform: $args;
  -ms-transform: $args;
  transform: $args;
}

$white: #fff;
$white90: rgba(255, 255, 255, 0.9);
$white85: rgba(255, 255, 255, 0.85);
$white75: rgba(255, 255, 255, 0.75);
$white50: rgba(255, 255, 255, 0.5);
$white25: rgba(255, 255, 255, 0.25);

$black25: rgba(0, 0, 0, 0.25);
$black50: rgba(0, 0, 0, 0.5);
$black75: rgba(0, 0, 0, 0.75);
$black: #000;

$primary: #ee7059;
$darkgrey: #424242;
$lightgrey: #f6f6f6;

$primaryhover: lighten($primary, 5%);

$light: 300;
$regular: 400;
$bold: 700;
$extrabold: 800;

$opensans: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$fontawesome: 'Font Awesome 5 Free';

// Font sizing
@mixin font-size($size: 12, $base: 16) {
  font-size: $size + px;
  font-size: ($size / $base) * 1rem;
}

@mixin line-height($heightValue: 12) {
  line-height: $heightValue + px; //fallback for old browsers
  line-height: (0.125 * $heightValue) + rem;
}

// Box Sizing
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
  -moz-box-sizing: $box-model; // Firefox <= 19
  box-sizing: $box-model;
}

// Transition
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

// Border Radius
@mixin border-radius($args...) {
  -webkit-border-radius: $args;
  -moz-border-radius: $args;
  border-radius: $args;
}

// Rotate
@mixin rotate($args...) {
  -webkit-transform: rotate($args);
  -moz-transform: rotate($args);
  -o-transform: rotate($args);
  -ms-transform: rotate($args);
  transform: rotate($args);
}

// Triangle
@mixin triangle($direction, $size: 8px, $color: #222) {
  content: '';
  display: block;
  position: absolute;
  height: 0;
  width: 0;
  @if ($direction == 'up') {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: none;
  } @else if ($direction == 'down') {
    border-top: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: none;
  } @else if ($direction == 'left') {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    border-left: none;
  } @else if ($direction == 'right') {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    border-right: none;
  }
}

// Clearfix
%clearfix {
  *zoom: 1;
  &:after {
    content: '';
    display: table;
    line-height: 0;
    clear: both;
  }
}

// Responsive Breakpoints
// Small:	0px - 569px (249px range)
// Medium:	570px - 819px (249px range)
// Large:	820px - 1069px (249px range)
// XL:		1070px - 1319px (249px range) - Not used!
@mixin breakpoint($point) {
  @if $point == large {
    @media only screen and (max-width: 1069px) {
      @content;
    }
  } @else if $point == medium {
    @media only screen and (max-width: 819px) {
      @content;
    }
  } @else if $point == small {
    @media only screen and (max-width: 569px) {
      @content;
    }
  }
}
